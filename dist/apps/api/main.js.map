{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ymrlk-code-blog/./apps/api/src/app/app.module.ts","webpack://ymrlk-code-blog/./apps/api/src/app/configs/configuration.ts","webpack://ymrlk-code-blog/./apps/api/src/app/decorators/roles.decorator.ts","webpack://ymrlk-code-blog/./apps/api/src/app/decorators/skip-jwt-check.decorator.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/auth.module.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/controllers/auth.controller.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/guards/jwt-auth.guard.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/guards/jwt-refresh-auth.guard.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/guards/local-auth.guard.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/interfaces/auth-token-request-payload.interface.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/services/auth.service.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/strategies/jwt-refresh-token.strategy.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/strategies/jwt.strategy.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/auth/strategies/local.strategy.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/users/controllers/users/users.controller.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/users/schemas/user.schema.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/users/services/users.service.ts","webpack://ymrlk-code-blog/./apps/api/src/app/repositories/users/users.module.ts","webpack://ymrlk-code-blog/./apps/api/src/app/routes.ts","webpack://ymrlk-code-blog/./apps/api/src/app/shared/guards/roles.guard.ts","webpack://ymrlk-code-blog/./apps/api/src/app/shared/shared.module.ts","webpack://ymrlk-code-blog/./apps/api/src/environments/environment.ts","webpack://ymrlk-code-blog/./libs/data/src/index.ts","webpack://ymrlk-code-blog/./libs/data/src/user/enum/role.enum.ts","webpack://ymrlk-code-blog/./libs/data/src/user/interfaces/user.interface.ts","webpack://ymrlk-code-blog/external commonjs \"@nestjs/common\"","webpack://ymrlk-code-blog/external commonjs \"@nestjs/config\"","webpack://ymrlk-code-blog/external commonjs \"@nestjs/core\"","webpack://ymrlk-code-blog/external commonjs \"@nestjs/jwt\"","webpack://ymrlk-code-blog/external commonjs \"@nestjs/mongoose\"","webpack://ymrlk-code-blog/external commonjs \"@nestjs/passport\"","webpack://ymrlk-code-blog/external commonjs \"@nestjs/serve-static\"","webpack://ymrlk-code-blog/external commonjs \"@nestjs/throttler\"","webpack://ymrlk-code-blog/external commonjs \"bcrypt\"","webpack://ymrlk-code-blog/external commonjs \"cookie-parser\"","webpack://ymrlk-code-blog/external commonjs \"helmet\"","webpack://ymrlk-code-blog/external commonjs \"mongoose\"","webpack://ymrlk-code-blog/external commonjs \"passport-jwt\"","webpack://ymrlk-code-blog/external commonjs \"passport-local\"","webpack://ymrlk-code-blog/external commonjs \"rand-token\"","webpack://ymrlk-code-blog/external commonjs \"tslib\"","webpack://ymrlk-code-blog/external commonjs \"uuid\"","webpack://ymrlk-code-blog/external node-commonjs \"path\"","webpack://ymrlk-code-blog/webpack/bootstrap","webpack://ymrlk-code-blog/./apps/api/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { APP_GUARD, RouterModule } from '@nestjs/core';\n\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { ServeStaticModule } from '@nestjs/serve-static';\n\nimport { join } from 'path';\n\nimport { AuthModule } from './repositories/auth/auth.module';\nimport { UsersModule } from './repositories/users/users.module';\nimport { JwtAuthGuard } from './repositories/auth/guards/jwt-auth.guard';\n\nimport { configuration, ConfigurationInterface } from './configs/configuration';\nimport { routes } from './routes';\nimport { SharedModule } from './shared/shared.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get<ConfigurationInterface>(\n          configuration.YMRLK_MONGODB_CONNECTION_STRING\n        ),\n        dbName: configService.get<ConfigurationInterface>(\n          configuration.YMRLK_MONGODB_DATABASE_NAME\n        ),\n        retryAttempts: configService.get<ConfigurationInterface>(\n          configuration.YMRLK_MONGODB_RETRY_ATTEMPTS\n        ),\n        retryDelay: configService.get<ConfigurationInterface>(\n          configuration.YMRLK_MONGODB_RETRY_DELAY\n        ),\n        user: configService.get<ConfigurationInterface>(\n          configuration.YMRLK_MONGODB_USER\n        ),\n        pass: configService.get<ConfigurationInterface>(\n          configuration.YMRLK_MONGODB_PASSWORD\n        ),\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({\n      cache: true,\n      isGlobal: true,\n      envFilePath: '.env.development.local',\n    }),\n    ThrottlerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        ttl: configService.get(configuration.YMRLK_THROTTLE_TTL),\n        limit: configService.get(configuration.YMRLK_THROTTLE_LIMIT),\n      }),\n      inject: [ConfigService],\n    }),\n    RouterModule.register(routes),\n\n    // Custom\n    AuthModule,\n    UsersModule,\n    SharedModule,\n\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client'),\n      exclude: ['/api*']\n    })\n  ],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n  ],\n})\nexport class AppModule {}\n","export interface ConfigurationInterface {\n  YMRLK_MONGODB_CONNECTION_STRING: string;\n  YMRLK_MONGODB_DATABASE_NAME: string;\n  YMRLK_MONGODB_RETRY_ATTEMPTS: string;\n  YMRLK_MONGODB_RETRY_DELAY: string;\n  YMRLK_MONGODB_USER: string;\n  YMRLK_MONGODB_PASSWORD: string;\n  YMRLK_THROTTLE_TTL: string;\n  YMRLK_THROTTLE_LIMIT: string;\n  YMRLK_JWT_SECRET: string;\n  YMRLK_JWT_EXPIRES_IN: string;\n  YMRLK_REFRESH_TOKEN_SIZE: string;\n  YMRLK_REFRESH_TOKEN_EXPIRATION_DAYS: string;\n}\n\nexport const configuration: ConfigurationInterface = {\n  YMRLK_MONGODB_CONNECTION_STRING:      'YMRLK_MONGODB_CONNECTION_STRING',\n  YMRLK_MONGODB_DATABASE_NAME:           'YMRLK_MONGODB_DATABASE_NAME',\n  YMRLK_MONGODB_RETRY_ATTEMPTS:         'YMRLK_MONGODB_RETRY_ATTEMPTS',\n  YMRLK_MONGODB_RETRY_DELAY:            'YMRLK_MONGODB_RETRY_DELAY',\n  YMRLK_MONGODB_USER:                   'YMRLK_MONGODB_USER',\n  YMRLK_MONGODB_PASSWORD:               'YMRLK_MONGODB_PASSWORD',\n  YMRLK_THROTTLE_TTL:                   'YMRLK_THROTTLE_TTL',\n  YMRLK_THROTTLE_LIMIT:                 'YMRLK_THROTTLE_LIMIT',\n  YMRLK_JWT_SECRET:                     'YMRLK_JWT_SECRET',\n  YMRLK_JWT_EXPIRES_IN:                 'YMRLK_JWT_EXPIRES_IN',\n  YMRLK_REFRESH_TOKEN_EXPIRATION_DAYS:  'YMRLK_REFRESH_TOKEN_EXPIRATION_DAYS',\n  YMRLK_REFRESH_TOKEN_SIZE:             'YMRLK_REFRESH_TOKEN_SIZE'\n};\n","import { SetMetadata } from '@nestjs/common';\n\nimport { RoleEnum } from '@ymrlk-code-blog/data';\n\nexport const ROLES_KEY = 'roles';\nexport const Roles = (...roles: RoleEnum[]) => SetMetadata(ROLES_KEY, roles);\n","import { SetMetadata } from '@nestjs/common';\n\nexport const SKIP_JWT_CHECK = 'skipJwtCheck';\nexport const SkipJwtCheck = () => SetMetadata(SKIP_JWT_CHECK, true);\n","import { Module } from '@nestjs/common';\n\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\nimport { UsersModule } from '../users/users.module';\nimport { AuthService } from './services/auth.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { JwtRefreshTokenStrategy } from './strategies/jwt-refresh-token.strategy';\n\nimport { AuthController } from './controllers/auth.controller';\nimport { configuration } from '../../configs/configuration';\n\n@Module({\n  controllers: [AuthController],\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get(configuration.YMRLK_JWT_SECRET),\n        signOptions: {\n          expiresIn: configService.get(configuration.YMRLK_JWT_EXPIRES_IN)\n        }\n      }),\n      inject: [ConfigService]\n    })\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    JwtRefreshTokenStrategy\n  ],\n  exports: [AuthService]\n})\nexport class AuthModule {}\n","import { Controller, Post, UseGuards, Request, HttpCode } from '@nestjs/common';\n\nimport { LocalAuthGuard } from '../guards/local-auth.guard';\nimport { AuthService } from '../services/auth.service';\n\nimport { UserInterface } from '@ymrlk-code-blog/data';\n\nimport { AuthTokenRequestPayloadInterface } from '../interfaces/auth-token-request-payload.interface';\nimport { JwtRefreshAuthGuard } from '../guards/jwt-refresh-auth.guard';\nimport { SkipJwtCheck } from '../../../decorators/skip-jwt-check.decorator';\n\n\n@Controller()\nexport class AuthController {\n\n  constructor(private readonly authService: AuthService) { }\n\n  @HttpCode(200)\n  @SkipJwtCheck()\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  async login(@Request() request: any) {\n    const { userName, uuid } = (request.user._doc as UserInterface);\n    return this.authService.login({ user: { userName, sub: uuid } });\n  }\n\n  @HttpCode(200)\n  @SkipJwtCheck()\n  @UseGuards(JwtRefreshAuthGuard)\n  @Post('refresh')\n  async refreshToken(@Request() req: AuthTokenRequestPayloadInterface) {\n    return await this.authService.login(req);\n  }\n\n}\n","import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Reflector } from '@nestjs/core';\n\nimport { SKIP_JWT_CHECK } from '../../../decorators/skip-jwt-check.decorator';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const skipAuth = this.reflector.getAllAndOverride<boolean>(SKIP_JWT_CHECK, [\n      context.getHandler(),\n      context.getClass()\n    ]);\n\n    if (skipAuth) {\n      return true;\n    }\n\n    return super.canActivate(context);\n  }\n\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtRefreshAuthGuard extends AuthGuard('jwt-refresh') { }\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') { }\n","export interface AuthTokenRequestPayloadInterface {\n  user: {\n    sub: string;\n    userName: string;\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { compare } from 'bcrypt';\nimport { generate } from 'rand-token'\n\nimport { UsersService } from '../../users/services/users.service';\nimport { UserDocument } from '../../users/schemas/user.schema';\nimport { AuthTokenRequestPayloadInterface } from '../interfaces/auth-token-request-payload.interface';\nimport { AuthTokensInterface } from '../interfaces/auth-tokens.interface';\n\nimport { configuration } from '../../../configs/configuration';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService\n  ) { }\n\n  async validateUser(email: string, password: string): Promise<UserDocument> {\n    const userDocument: UserDocument = await this.usersService.findOne(email);\n\n    if (!userDocument) {\n      return null;\n    }\n\n    const arePasswordsSame = await compare(password, userDocument.password);\n\n    if (userDocument && arePasswordsSame) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { password, ...result } = userDocument;\n      return result as UserDocument;\n    }\n  }\n\n  async login(loginPayload: AuthTokenRequestPayloadInterface): Promise<AuthTokensInterface> {\n    const { userName, sub } = loginPayload.user;\n    const payload = { userName, sub };\n\n    return {\n      accessToken: this.jwtService.sign(payload),\n      refreshToken: await this.generateRefreshToken(sub)\n    };\n  }\n\n  private async generateRefreshToken(userUUID: string): Promise<string> {\n    const refreshToken = generate(this.configService.get(configuration.YMRLK_REFRESH_TOKEN_SIZE));\n    const expirationDate = new Date();\n\n    expirationDate.setDate(\n      expirationDate.getDate() + +this.configService.get(configuration.YMRLK_REFRESH_TOKEN_EXPIRATION_DAYS)\n    );\n\n    await this.usersService.saveOrUpdateRefreshToken(userUUID, refreshToken, expirationDate);\n\n    return refreshToken;\n  }\n\n}\n","import { Injectable, Request, UnauthorizedException } from '@nestjs/common';\n\nimport { ConfigService } from '@nestjs/config';\n\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { UserInterface } from '@ymrlk-code-blog/data';\n\nimport { UsersService } from '../../users/services/users.service';\nimport { AuthValidationPayloadInterface } from '../interfaces/auth-validation-payload.interface';\nimport { UserDocument } from '../../users/schemas/user.schema';\nimport { configuration } from '../../../configs/configuration';\n\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n\n  constructor(private configService: ConfigService, private usersService: UsersService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromBodyField('accessToken'),\n      ignoreExpiration: true,\n      secretOrKey: configService.get(configuration.YMRLK_JWT_SECRET),\n      passReqToCallback: true\n    });\n  }\n\n  async validate(request: Request, payload: AuthValidationPayloadInterface): Promise<AuthValidationPayloadInterface> {\n    const userDocument: UserDocument = await this.usersService.findByUUID(payload.sub);\n\n    if (!userDocument) {\n      throw new UnauthorizedException('No refresh token found');\n    }\n\n    if ((request.body as UserInterface).refreshToken != (await userDocument).refreshToken) {\n      throw new UnauthorizedException('Refresh token does not matched');\n    }\n\n    if (new Date() > new Date((await userDocument).refreshTokenExpiresIn)) {\n      throw new UnauthorizedException('Refresh token expired');\n    }\n\n    return { sub: payload.sub, userName: userDocument.userName };\n  }\n\n\n}\n","import { Injectable } from '@nestjs/common';\n\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\n\nimport { AuthValidationPayloadInterface } from '../interfaces/auth-validation-payload.interface';\nimport { configuration } from '../../../configs/configuration';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(configuration.YMRLK_JWT_SECRET)\n    });\n  }\n\n  async validate(payload: AuthValidationPayloadInterface): Promise<AuthValidationPayloadInterface> {\n    return {sub: payload.sub, userName: payload.userName};\n  }\n}\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\n\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\n\nimport { AuthService } from '../services/auth.service';\nimport { UserDocument } from '../../users/schemas/user.schema';\n\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n\n  constructor(private readonly moduleRef: ModuleRef) {\n    super({\n      usernameField: 'email',\n      passwordField: 'password',\n      passReqToCallback: true\n    });\n  }\n\n  async validate(request: Request, email: string, password: string): Promise<UserDocument> {\n    const contextId = ContextIdFactory.getByRequest(request);\n    const authService = await this.moduleRef.resolve(AuthService, contextId);\n\n    const userDocument = await authService.validateUser(email, password);\n\n    if (!userDocument) {\n      throw new HttpException('User was not found', HttpStatus.NOT_FOUND);\n    }\n\n    return userDocument;\n  }\n}\n","import { Body, Controller, Get, HttpCode, HttpException, HttpStatus, Param, Post } from '@nestjs/common';\n\nimport { RoleEnum, UserInterface } from '@ymrlk-code-blog/data';\n\nimport { SkipJwtCheck } from '../../../../decorators/skip-jwt-check.decorator';\nimport { UsersService } from '../../services/users.service';\nimport { UserDocument } from '../../schemas/user.schema';\nimport { Roles } from '../../../../decorators/roles.decorator';\n\n@Controller()\nexport class UsersController {\n\n  constructor(private readonly usersService: UsersService) { }\n\n  @Get('email/:email')\n  async getByEmail(@Param() email: { email: string }): Promise<UserDocument> {\n    const userDocument = await this.usersService.findByEmail(email.email);\n\n    if (!userDocument) {\n      throw new HttpException({\n        status: HttpStatus.NOT_FOUND,\n        error: `User with ${ email.email } email was not found`\n      }, HttpStatus.NOT_FOUND);\n    }\n\n    return userDocument;\n  }\n\n  @Get('uuid/:uuid')\n  async getByUUID(@Param() uuid: { uuid: string }): Promise<UserDocument> {\n    const userDocument = await this.usersService.findByUUID(uuid.uuid);\n\n    if (!userDocument) {\n      throw new HttpException({\n        status: HttpStatus.NOT_FOUND,\n        error: `User with ${ uuid.uuid } was not found`\n      }, HttpStatus.NOT_FOUND);\n    }\n\n    return userDocument;\n  }\n\n  @HttpCode(200)\n  @SkipJwtCheck()\n  @Post('register')\n  async createOne(@Body() model: UserInterface): Promise<UserDocument> {\n    const userDocument = await this.usersService.createOne(model);\n\n    if (userDocument) {\n      return userDocument;\n    } else {\n      throw new HttpException({\n        status: HttpStatus.BAD_REQUEST,\n        error: 'User already exist'\n      }, HttpStatus.BAD_REQUEST)\n    }\n  }\n\n  @HttpCode(200)\n  @Post('remove-user')\n  @Roles(RoleEnum.Admin)\n  addRole(@Body() uuid: { uuid: string }): any {\n    return uuid;\n  }\n\n}\n","import { Document } from 'mongoose';\nimport { Prop, raw, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n\n  @Prop({ type: String, maxlength: 50 })\n  userName: string;\n\n  @Prop({ type: String, maxlength: 50 })\n  firstName: string;\n\n  @Prop({ type: String, maxlength: 50 })\n  lastName: string;\n\n  @Prop({ type: String, maxlength: 250 })\n  shortBio: string;\n\n  @Prop(raw({\n    name: { type: String },\n    path: { type: String }\n  }))\n  avatar: Record<string, any>;\n\n  @Prop(raw({\n    url: { type: String },\n    prefix: { type: String }\n  }))\n  accountUrl: Record<string, any>;\n\n  @Prop({ type: String, required: true, unique: true })\n  email: string;\n\n  @Prop({ type: String, required: true })\n  password: string;\n\n  @Prop(raw({\n    country: { type: String },\n    city: { type: String }\n  }))\n  from: Record<string, any>;\n\n  @Prop({ type: [String], required: true })\n  roles: string[];\n\n  @Prop({ type: String, required: true, unique: true })\n  uuid: string;\n\n  @Prop({ type: String })\n  refreshToken: string;\n\n  @Prop({ type: Date })\n  refreshTokenExpiresIn: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n","import { Injectable } from '@nestjs/common';\n\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { UserInterface } from '@ymrlk-code-blog/data';\n\nimport { hash } from 'bcrypt';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport { User, UserDocument } from '../schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n\n  constructor(@InjectModel(User.name) private userModel: Model<UserDocument>) { }\n\n  async findOne(email: string): Promise<UserDocument> {\n    const foundUserDocument = await this.userModel.findOne({ email }).exec();\n\n    if (!foundUserDocument) {\n      return null;\n    }\n\n    return foundUserDocument;\n  }\n\n  async findByEmail(email: string): Promise<UserDocument> {\n    const foundUserDocument = await this.userModel.findOne({ email }).select('-password').exec();\n\n    if (!foundUserDocument) {\n      return null;\n    }\n\n    return foundUserDocument;\n  }\n\n  async findByUUID(uuid: string): Promise<UserDocument> {\n    const foundUserDocument = await this.userModel.findOne({ uuid }).select('-password').exec();\n\n    if (!foundUserDocument) {\n      return null;\n    }\n\n    return foundUserDocument;\n  }\n\n  async createOne(model: UserInterface): Promise<any> {\n    const userExist = await this.findByEmail(model.email);\n\n    if (!userExist) {\n      return this.getCreatedDocument(model);\n    }\n\n    return false;\n  }\n\n  async saveOrUpdateRefreshToken(uuid: string, refreshToken: string, refreshTokenExpiresIn: Date): Promise<void> {\n    await this.userModel.findOneAndUpdate({ uuid }, {\n      refreshToken,\n      refreshTokenExpiresIn\n    });\n  }\n\n  private async getCreatedDocument(model): Promise<any> {\n\n    const modelCopy = {\n      ...model,\n      password: await this.hashPassword(model.password),\n      uuid: uuidv1()\n    };\n\n    const user = await new this.userModel(modelCopy).save();\n\n    if (user) {\n      return true;\n    }\n  }\n\n  private async hashPassword(password: string): Promise<string> {\n    return await hash(password, 10);\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { UsersService } from './services/users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { UsersController } from './controllers/users/users.controller';\n\n@Module({\n  controllers: [UsersController],\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    SharedModule\n  ],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule {}\n","import { Routes } from '@nestjs/core';\n\nimport { AuthModule } from './repositories/auth/auth.module';\nimport { UsersModule } from './repositories/users/users.module';\n\nexport const routes: Routes = [\n  {\n    path: 'auth',\n    module: AuthModule\n  },\n  {\n    path: 'users',\n    module: UsersModule\n  }\n]\n","import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { RoleEnum } from '@ymrlk-code-blog/data';\n\nimport { ROLES_KEY } from '../../decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n\n  constructor(private readonly reflector: Reflector) { }\n\n  canActivate(context: ExecutionContext): boolean | Promise<boolean> {\n    const requiredRoles = this.reflector.getAllAndOverride<RoleEnum[]>(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role: RoleEnum) => user.roles?.includes(role));\n  }\n\n}\n","import { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\n\nimport { RolesGuard } from './guards/roles.guard';\n\n@Module({\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard\n    }\n  ]\n})\nexport class SharedModule {}\n","export const environment = {\n  production: false,\n  server: {\n    host: 'http://localhost:3000',\n    port: 3000,\n    hostname: '0.0.0.0',\n    globalPrefix: 'api',\n    cors: { origin: 'http://localhost:4200' }\n  }\n};\n","// User exports\nexport * from './user/interfaces/user.interface';\nexport * from './user/enum/role.enum';\n","export enum RoleEnum {\n  Admin = 'admin',\n  Moderator = 'moderator',\n  User = 'user'\n}\n","export interface UserInterface {\n  userName?: string;\n  firstName?: string;\n  lastName?: string;\n  shortBio?: string;\n  avatar?: {\n    alt: string;\n    path: string;\n  }\n  accountUrl?: {\n    url: string;\n    prefix: string;\n  }\n  email?: string;\n  password?: string;\n  from?: {\n    country?: string;\n    city?: string;\n  }\n  roles?: string[];\n  uuid?: string;\n  _id?: string;\n  refreshToken?: string;\n  refreshTokenExpiresIn?: Date;\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/throttler\");","module.exports = require(\"bcrypt\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"helmet\");","module.exports = require(\"mongoose\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"rand-token\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport cookieParser from 'cookie-parser';\nimport helmet from 'helmet';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.setGlobalPrefix(environment.server.globalPrefix);\n\n  app.use(helmet());\n  app.use(cookieParser());\n\n  app.enableCors(\n    {\n      origin: environment.server.cors.origin,\n      credentials: true\n    }\n  );\n\n  await app.listen(environment.server.port, environment.server.hostname);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${environment.server.port}/${environment.server.globalPrefix}`\n  );\n}\n\nbootstrap().catch((error) => console.error('Server runs with error: ', error));\n"],"names":[],"sourceRoot":""}